typeof(games)
dim(games)
names(Games)
names(games)
games <- x[[2]][['game']]
typeof(games)
data <- c(x[[2]][['game']], x[[2]][['viewers']])
View(data)
data
dd <- data.frame(matrix(data, nrow=100))
View(dd)
names(dd) <- c('game', 'viewers')
dd <- group_by(dd, game) %>% summarise(viewers=sum(viewers)) %>% mutate(shareViewers=viewers/sum(viewers))
str(dd)
dd$viewers <- as.numeric(dd$viewers)
summary(dd$viewers)
View(dd)
dd <- data.frame(matrix(data, nrow=100))
names(dd) <- c('game', 'viewers')
dd$viewers <- as.numeric(as.character(dd$viewers))
View(dd)
dd <- group_by(dd, game) %>% summarise(viewers=sum(viewers)) %>% mutate(shareViewers=viewers/sum(viewers))
View(dd)
dd <- data.frame(matrix(data, nrow=100))
names(dd) <- c('game', 'viewers')
dd$viewers <- as.numeric(as.character(dd$viewers))
dd <- group_by(dd, game) %>% summarise(viewers=sum(viewers)) %>%
mutate(shareViewers=viewers/sum(viewers)) %>%
arrange(desc(shareViewers))
x[[3]]
x[[3]][['next']]
typeof(x[[3]][['next']])
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
data <- data.frame()
for(i in 1:9) {
streams <- data.frame(matrix(unlist(x[[2]]), nrow=100))
data <- c(x[[2]][['game']], x[[2]][['viewers']])
dd <- data.frame(matrix(data, nrow=100))
names(dd) <- c('game', 'viewers')
data <<- rbind(data, dd)
x <- fromJSON
}
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
streams <- data.frame(matrix(unlist(x[[2]]), nrow=100))
data <- c(x[[2]][['game']], x[[2]][['viewers']])
data <- data.frame()
dd <- data.frame(matrix(data, nrow=100))
names(dd) <- c('game', 'viewers')
streams <- data.frame(matrix(unlist(x[[2]]), nrow=100))
data <- c(x[[2]][['game']], x[[2]][['viewers']])
names(data)
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
data <- data.frame()
streams <- data.frame(matrix(unlist(x[[2]]), nrow=100))
names(streams)
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
data <- data.frame()
data <- c(x[[2]][['game']], x[[2]][['viewers']])
dd <- data.frame(matrix(data, nrow=100))
names(dd) <- c('game', 'viewers')
data <<- rbind(data, dd)
data <- c(x[[2]][['game']], x[[2]][['viewers']])
dd <- data.frame(matrix(data, nrow=100, stringsAsFactors=FALSE))
data <- c(x[[2]][['game']], x[[2]][['viewers']])
dd <- data.frame(matrix(data, nrow=100), stringsAsFactors=FALSE)
names(dd) <- c('game', 'viewers')
str(dd)
data <<- rbind(data, dd)
data <- data.frame()
data <<- rbind(data, dd)
data <- rbind(data, dd)
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
data <- data.frame()
for(i in 1:9) {
data <- c(x[[2]][['game']], x[[2]][['viewers']])
dd <- data.frame(matrix(data, nrow=100), stringsAsFactors=FALSE)
names(dd) <- c('game', 'viewers')
data <- rbind(data, dd)
x <- fromJSON
}
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
data <- data.frame()
for(i in 1:9) {
data <- c(x[[2]][['game']], x[[2]][['viewers']])
dd <- data.frame(matrix(data, nrow=100), stringsAsFactors=FALSE)
names(dd) <- c('game', 'viewers')
data <- rbind(data, dd)
x <- fromJSON(x[[2]][['next']])
}
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
y <- fromJSON(x[[3]][['next']])
y <- x[[3]][['next']]
y
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
data <- data.frame()
for(i in 1:9) {
data <- c(x[[2]][['game']], x[[2]][['viewers']])
dd <- data.frame(matrix(data, nrow=100), stringsAsFactors=FALSE)
names(dd) <- c('game', 'viewers')
data <- rbind(data, dd)
x <- fromJSON(paste0(x[[2]][['next']], '?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm')
}
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
data <- data.frame()
for(i in 1:9) {
data <- c(x[[2]][['game']], x[[2]][['viewers']])
dd <- data.frame(matrix(data, nrow=100), stringsAsFactors=FALSE)
names(dd) <- c('game', 'viewers')
data <- rbind(data, dd)
x <- fromJSON(paste0(x[[2]][['next']], '?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm'))
}
x[[2]][['next']]
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
x[[3]][['next']]
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
data <- data.frame()
for(i in 1:9) {
data <- c(x[[2]][['game']], x[[2]][['viewers']])
dd <- data.frame(matrix(data, nrow=100), stringsAsFactors=FALSE)
names(dd) <- c('game', 'viewers')
data <- rbind(data, dd)
x <- fromJSON(paste0(x[[3]][['next']], '&client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm'))
}
library(jsonlite)
library(dplyr)
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
data <- data.frame()
for(i in 1:9) {
data <- c(x[[2]][['game']], x[[2]][['viewers']])
dd <- data.frame(matrix(data, nrow=100), stringsAsFactors=FALSE)
names(dd) <- c('game', 'viewers')
data <<- rbind(data, dd)
x <- fromJSON(paste0(x[[3]][['next']], '&client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm'))
}
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
data <- data.frame()
for(i in 1:9) {
page <- c(x[[2]][['game']], x[[2]][['viewers']])
dd <- data.frame(matrix(page, nrow=100), stringsAsFactors=FALSE)
names(dd) <- c('game', 'viewers')
data <<- rbind(data, dd)
x <- fromJSON(paste0(x[[3]][['next']], '&client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm'))
}
library(jsonlite)
library(dplyr)
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
data <- data.frame()
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
data <- data.frame()
for(i in 1:10) {
page <- c(x[[2]][['game']], x[[2]][['viewers']])
dd <- data.frame(matrix(page, nrow=100), stringsAsFactors=FALSE)
names(dd) <- c('game', 'viewers')
data <<- rbind(data, dd)
x <- fromJSON(paste0(x[[3]][['next']], '&client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm'))
}
data <- data.frame()
for(i in 1:10) {
page <- c(x[[2]][['game']], x[[2]][['viewers']])
dd <- data.frame(matrix(page, nrow=100), stringsAsFactors=FALSE)
names(dd) <- c('game', 'viewers')
data <- rbind(data, dd)
x <- fromJSON(paste0(x[[3]][['next']], '&client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm'))
}
names(data)
str(dd)
str(data)
data$viewers <- as.numeric(as.character(data$viewers))
data <- group_by(data, game) %>% summarise(viewers=sum(viewers)) %>%
mutate(shareViewers=viewers/sum(viewers)) %>%
arrange(desc(shareViewers))
View(data)
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
total = x[[1]]
total
30962/100
ceiling(total/100)
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
data <- data.frame()
total = x[[1]]
for(i in c(1:ceiling(total/100))) {
page <- c(x[[2]][['game']], x[[2]][['viewers']])
dd <- data.frame(matrix(page, nrow=100), stringsAsFactors=FALSE)
names(dd) <- c('game', 'viewers')
data <- rbind(data, dd)
x <- fromJSON(paste0(x[[3]][['next']], '&client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm'))
}
data$viewers <- as.numeric(as.character(data$viewers))
data <- group_by(data, game) %>% summarise(viewers=sum(viewers)) %>%
mutate(shareViewers=viewers/sum(viewers)) %>%
arrange(desc(shareViewers))
View(data)
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
total = x[[1]]
total
data <- data.frame()
for(i in (c(1:50)) {
page <- c(x[[2]][['game']], x[[2]][['viewers']])
dd <- data.frame(matrix(page, nrow=100), stringsAsFactors=FALSE)
names(dd) <- c('game', 'viewers')
data <- rbind(data, dd)
x <- fromJSON(paste0(x[[3]][['next']], '&client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm'))
}
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
data <- data.frame()
total = x[[1]]
for(i in c(1:50)) {
page <- c(x[[2]][['game']], x[[2]][['viewers']])
dd <- data.frame(matrix(page, nrow=100), stringsAsFactors=FALSE)
names(dd) <- c('game', 'viewers')
data <- rbind(data, dd)
x <- fromJSON(paste0(x[[3]][['next']], '&client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm'))
}
x <- fromJSON("https://api.twitch.tv/kraken/streams/?client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm&stream_type=live&limit=100")
data <- data.frame()
total = x[[1]]
for(i in c(1:100)) {
page <- c(x[[2]][['game']], x[[2]][['viewers']])
dd <- data.frame(matrix(page, nrow=100), stringsAsFactors=FALSE)
names(dd) <- c('game', 'viewers')
data <- rbind(data, dd)
x <- fromJSON(paste0(x[[3]][['next']], '&client_id=2l2oibdu6fan8fv18krp1s2mzhz6qm'))
}
backup <- data
View(backup)
data$viewers <- as.numeric(as.character(data$viewers))
data <- group_by(data, game) %>% summarise(viewers=sum(viewers)) %>%
mutate(shareViewers=viewers/sum(viewers)) %>%
arrange(desc(shareViewers))
View(data)
data <- backup
data <- group_by(data, game) %>% mutate(streamers=n()) %>% summarise(viewers=sum(viewers), streamers=first(streamers)) %>%
mutate(shareViewers=viewers/sum(viewers)) %>%
arrange(desc(shareViewers))
data <- backup
data$viewers <- as.numeric(as.character(data$viewers))
data <- group_by(data, game) %>% mutate(streamers=n())
data <- backup
data <- group_by(data, game) %>% mutate(streamers=n()) %>% summarise(viewers=sum(viewers), streamers=first(streamers))
data <- backup
data <- group_by(data, game) %>% mutate(streamers=n()) %>% summarise(viewers=sum(viewers), streamers=mean(streamers))
data <- backup
data$viewers <- as.numeric(as.character(data$viewers))
data <- group_by(data, game) %>% mutate(streamers=n())
str(data)
View(data)
data <- backuip
data <- backup
data$viewers <- as.numeric(as.character(data$viewers))
data <- group_by(data, game) %>% mutate(streamers=n()) %>% summarise(viewers=sum(viewers)) %>%
mutate(shareViewers=viewers/sum(viewers)) %>%
arrange(desc(shareViewers))
View(data)
data <- backup
data$viewers <- as.numeric(as.character(data$viewers))
data <- group_by(data, game) %>% mutate(streamers=n())
data <- backup
data <- group_by(data, game) %>% mutate(streamers=n()) %>% summarise(viewers=sum(viewers), stramers=first(streamers))
data <- backup
data$viewers <- as.numeric(as.character(data$viewers))
data <- group_by(data, game) %>% mutate(streamers=n()) %>% group_by(game, streamers) %>% summarise(viewers=sum(viewers)) %>%
mutate(shareViewers=viewers/sum(viewers)) %>%
arrange(desc(shareViewers))
View(data)
data <- backup
data$viewers <- as.numeric(as.character(data$viewers))
data <- group_by(data, game) %>% mutate(streamers=n()) %>% group_by(game) %>% summarise(viewers=sum(viewers), streamers=first(streamers)) %>%
mutate(shareViewers=viewers/sum(viewers)) %>%
arrange(desc(shareViewers))
View(data)
data <- backup
data$viewers <- as.numeric(as.character(data$viewers))
data <- group_by(data, game) %>% mutate(streamers=n()) %>% group_by(game) %>%
summarise(viewers=sum(viewers), streamers=first(streamers)) %>%
mutate(shareViewers=viewers/sum(viewers), viewersPerStreamer=viewers/streamers) %>%
arrange(desc(viewersPerStreamer))
data <- backup
data$viewers <- as.numeric(as.character(data$viewers))
data <- group_by(data, game) %>% mutate(streamers=n()) %>% group_by(game) %>%
summarise(viewers=sum(viewers), streamers=first(streamers)) %>%
mutate(shareViewers=viewers/sum(viewers), viewersPerStreamer=viewers/streamers) %>%
arrange(desc(shareViewers))
x <- c(2,3,7,2,6,10,8,7,5,10,10,13,14,13,15)
length(x)
mean(x)
sum((x-mean(x))^2)
x <- c(2,3,7,2,6)
y <- c(10,8,7,5,10)
z <- c(10,13,14,13,15)
t <- c(2,3,7,2,6,10,8,7,5,10,10,13,14,13,15)
sumSquares <- function(x) {
sum((x-mean(x))^2)
}
sumSquares(x) + sumSquares(y) + sumSquares(z)
sumSquares(t)
ssw <- function(x) {
sum((x-mean(x))^2)
}
ssb <- function(x, y) {
sum((x-y)^2)
}
x <- c(2,3,7,2,6)
y <- c(10,8,7,5,10)
z <- c(10,13,14,13,15)
t <- c(2,3,7,2,6,10,8,7,5,10,10,13,14,13,15)
# Sum of squares within groups
ssw(x) + ssw(y) + ssw(z)
# Sum of Squares Between groups
# Total sum of squares
ssw(t)
ssb(x, t) + ssb(y, t) + ssb(z, t)
ssb <- function(x, y) {
length(x)*(mean(x)-mean(y))^2
}
ssb(x, t) + ssb(y, t) + ssb(z, t)
sumWithin <- ssw(x) + ssw(y) + ssw(z)
# Sum of Squares Between groups
sumBetween <- ssb(x, t) + ssb(y, t) + ssb(z, t)
# Total sum of squares
totalSum <- ssw(t)
totalSum == sumWithin+sumBetween
sumWithin/(3-1)
sumWithin
sumBetween/(3-1)
sumWithin/(15-3)
101.6667 / 4.5
qf(.95, df1=2, df2=12)
qf(.95, df1=2, df2=12) # 3.885
qf(.95, df1=2, df2=600000) # 3.885
qf(.95, df1=2, df2=2000000) # 3.885
aa <- as.data.frame(rbinom(1500000, 1, 0.02))
ab <- as.data.frame(rbinom(1500000, 1, 0.023))
ba <- as.data.frame(rbinom(1500000, 1, 0.021))
bb <- as.data.frame(rbinom(1500000, 1, 0.022))
names(aa) <- c('conversion')
names(ba) <- c('conversion')
names(ab) <- c('conversion')
names(bb) <- c('conversion')
# Prepare data as for two way anova
aa$test1 <- 'A'
aa$test2 <- 'A'
ab$test1 <- 'A'
ab$test2 <- 'B'
ba$test1 <- 'B'
ba$test2 <- 'A'
bb$test1 <- 'B'
bb$test2 <- 'B'
dd <- rbind(aa, ab, ba, bb)
x <- dd$conversion
y <- asin(x)
summary(dd$x)
summary(x)
summary(y)
dd$conversion <- asin(dd$conversion)
summary(dd$conversion)
anova(lm(conversion ~ test1 * test2, dd))
consumer_key <- "KhkwmrJAsb9RyE562dawNucCf"
consumer_secret <- "yby39ICRoCUeUIu074TIRvclwbaX9Wj7HEPhsAIN8Xfswr2Yiq"
access_token <- "224395809-686zlx71L85rAsVcnl54hkP2AQeTXAYcyeOz17jU"
access_secret <- "hIG2BvMAHRFuGOt9jv3HAKDMap25jq9RmZoO9Qwto0azL"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
require(twitteR)
consumer_key <- "KhkwmrJAsb9RyE562dawNucCf"
consumer_secret <- "yby39ICRoCUeUIu074TIRvclwbaX9Wj7HEPhsAIN8Xfswr2Yiq"
access_token <- "224395809-686zlx71L85rAsVcnl54hkP2AQeTXAYcyeOz17jU"
access_secret <- "hIG2BvMAHRFuGOt9jv3HAKDMap25jq9RmZoO9Qwto0azL"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
tw = twitteR::searchTwitter('neymar', n = 1e4, since = '2016-11-08', retryOnRateLimit = 1e3)
tw = twitteR::searchTwitter('neymar', n = 10, since = '2017-07-29', retryOnRateLimit = 1e3)
tw
dt = twitteR::twListToDF(tw)
View(dt)
tw = twitteR::searchTwitter('#neymar OR #psg', n = 100, since = '2017-07-29', retryOnRateLimit = 1e3)
dt = twitteR::twListToDF(tw)
View(dt)
View(dt$text)
View(dt$text)
x <- dt$text
View(x)
typeof(x)
dt$text
tw = twitteR::searchTwitter('#neymar #psg', n = 100, since = '2017-07-29', retryOnRateLimit = 1e3)
dt = twitteR::twListToDF(tw)
dt$text
View(df)
View(dt)
str(dt)
require(twitteR)
consumer_key <- "KhkwmrJAsb9RyE562dawNucCf"
consumer_secret <- "yby39ICRoCUeUIu074TIRvclwbaX9Wj7HEPhsAIN8Xfswr2Yiq"
access_token <- "224395809-686zlx71L85rAsVcnl54hkP2AQeTXAYcyeOz17jU"
access_secret <- "hIG2BvMAHRFuGOt9jv3HAKDMap25jq9RmZoO9Qwto0azL"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
tw = twitteR::searchTwitter('#tourTVE', n = 1e4, since = '2017-07-01', retryOnRateLimit = 1e3)
dt = twitteR::twListToDF(tw)
View(dt)
dt$text
str(dt)
names(dt)
library(dplyr)
library(tidyr)
library(ggplot2)
names(dt)
dd <- select(dt, c(1,5,8,11,12,13))
names(dd)
dd <- mutate(dd, date=as.POSIXct(created, format='YYYY-mm-dd')
)
names(dd)
View(dd)
?strptime
dd <- mutate(dd, date=strptime(created, format='YYYY-mm-dd'))
dd <- mutate(dd, date=strftime(created, format='YYYY-mm-dd'))
View(dd)
dd <- mutate(dd, date=strftime(created, format='%Y-%m-%d'))
str(dd)
dd$date <- as.Date(dd$date, format='%Y-%m-%d')
str(dd)
View(dd)
dd <- mutate(dd, date=strftime(created, format='%Y-%m-%d'), hour=strftime(created, format='%H'), minute=strftime(created, format='%M'))
dd$date <- as.Date(dd$date, format='%Y-%m-%d')
str(dd)
dd$hour <- as.integer(dd$hour)
dd$minute <- as.integer(dd$minute)
str(dd)
summary(dd$hour)
table(dd$hour)
table(dd$minute)
names(dd)
tday <- group_by(dd, created) %>% summarise(tweets=n())
View(tday)
tday <- group_by(dd, date) %>% summarise(tweets=n()) %>% arrange(date)
View(tday)
tw2 = twitteR::searchTwitter('#tourTVE', n = 1e4, since = '2017-07-01', maxID = 888091153064759297, retryOnRateLimit = 1e3)
getCurRateLimitInfo()
tw2 = twitteR::searchTwitter('#tourTVE', n = 1e4, since = '2017-07-01', maxID = 888091153064759297, retryOnRateLimit = 1e3)
tw2 = twitteR::searchTwitter('#tourTVE', n = 1e4, since = '2017-07-01', retryOnRateLimit = 1e3)
getCurRateLimitInfo()
setwd("E:/R projects/twitterAPI")
write.csv(dt, file='tourTVE.csv', row.names = FALSE)
View(tday)
dd <- mutate(dd, date=strftime(created, format='%Y-%m-%d'),
hour=strftime(created, format='%H'),
minute=strftime(created, format='%M'),
hourMinute=strftime(Created, format='%H%M'))
dd$date <- as.Date(dd$date, format='%Y-%m-%d')
dd$hour <- as.integer(dd$hour)
dd$minute <- as.integer(dd$minute)
dd$hourMinute <- as.factor(dd$hourMinute)
dd <- select(dt, c(1,5,8,11,12,13))
dd <- mutate(dd, date=strftime(created, format='%Y-%m-%d'),
hour=strftime(created, format='%H'),
minute=strftime(created, format='%M'),
hourMinute=strftime(created, format='%H%M'))
dd$date <- as.Date(dd$date, format='%Y-%m-%d')
dd$hour <- as.integer(dd$hour)
dd$minute <- as.integer(dd$minute)
dd$hourMinute <- as.factor(dd$hourMinute)
activity <- filter(dd, date %in% c('2017-07-21', '2017-07-22', '2017-07-23')) %>%
group_by(date, hourMinute) %>% summarise(tweets=n())
ggplot(activity, aes(x=hourMinute, y=tweets, group=date, colour=date)) + geom_line()
names(acitivty)
names(activity)
ggplot(activity, aes(x=hourMinute, y=tweets, group=date)) + geom_line()
activity <- filter(dd, date %in% c('2017-07-21', '2017-07-22', '2017-07-23')) %>%
group_by(date, hourMinute) %>% summarise(tweets=n()) %>% ungroup()
ggplot(activity, aes(x=hourMinute, y=tweets, group=date)) + geom_line()
activity <- filter(dd, date %in% c('2017-07-21', '2017-07-22', '2017-07-23')) %>%
group_by(date, hourMinute) %>% summarise(tweets=n())
View(activity)
str(dd)
activity <- filter(dd, between(date, '2017-07-21', '2017-07-23')) %>%
group_by(date, hourMinute) %>% summarise(tweets=n())
activity <- filter(dd, date >= '2017-07-21' & date <= '2017-07-23') %>%
group_by(date, hourMinute) %>% summarise(tweets=n())
dd <- select(dt, c(1,5,8,11,12,13))
dd <- mutate(dd, date=strftime(created, format='%Y-%m-%d'),
hour=strftime(created, format='%H'),
minute=strftime(created, format='%M'),
hourMinute=strftime(created, format='%H:%M'))
dd$date <- as.Date(dd$date, format='%Y-%m-%d')
dd$hour <- as.integer(dd$hour)
dd$minute <- as.integer(dd$minute)
dd$hourMinute <- as.factor(dd$hourMinute)
# filter only 3/4 relevant dates
activity <- filter(dd, date >= '2017-07-21' & date <= '2017-07-23') %>%
group_by(date, hourMinute) %>% summarise(tweets=n())
ggplot(activity, aes(x=hourMinute, y=tweets, group=date)) + geom_line()
ggplot(activity, aes(x=hourMinute, y=tweets, group=date, colour=date)) + geom_line()
ggplot(activity, aes(x=hourMinute, y=tweets, group=date, colour=as.factor(date))) + geom_line()
activity <- filter(dd, date >= '2017-07-21' & date <= '2017-07-23') %>%
group_by(date, hour) %>% summarise(tweets=n())
ggplot(activity, aes(x=hour, y=tweets, group=date, colour=as.factor(date))) + geom_line()
ggplot(activity, aes(x=as.factor(hour), y=tweets, group=date, colour=as.factor(date))) + geom_line()
?ifelse
dd$halfHour <- ifelse(dd$minute >= 30, paste(dd$hour, '30', sep=':'), paste(dd$hour, '00', sep=':'))
names(dd)
str(dd)
dd$halfHour <- as.factor(dd$halfHour)
activity <- filter(dd, date >= '2017-07-21' & date <= '2017-07-23') %>%
group_by(date, halfHour) %>% summarise(tweets=n())
ggplot(activity, aes(x=as.factor(halfHour), y=tweets, group=date, colour=as.factor(date))) + geom_line()
ggplot(activity, aes(x=as.factor(halfHour), y=tweets, group=date, colour=as.factor(date))) + geom_line() + geom_point()
names(dd)
activity <- filter(dd, date >= '2017-07-21' & date <= '2017-07-23') %>%
group_by(date, halfHour) %>% summarise(tweets=n(), created=first(created)) %>% arrange(asc(created))
activity <- filter(dd, date >= '2017-07-21' & date <= '2017-07-23') %>%
group_by(date, halfHour) %>% summarise(tweets=n(), created=first(created)) %>% arrange(created)
ggplot(activity, aes(x=as.factor(halfHour), y=tweets, group=date, colour=as.factor(date))) + geom_line() + geom_point()
activity <- filter(dd, date >= '2017-07-21' & date <= '2017-07-23') %>%
group_by(date, halfHour) %>% summarise(tweets=n())
ggplot(activity, aes(x=as.factor(halfHour), y=tweets, group=date, colour=as.factor(date))) + geom_line() + geom_point()
